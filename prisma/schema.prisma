generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id @default(cuid())
  username      String    @unique
  password      String
  role          Role      @default(USER)
  userTypeId    String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  email         String    @default("")
  emailVerified DateTime?
  chatApps      ChatApp[]
  userType      UserType  @relation(fields: [userTypeId], references: [id])
}

model UserType {
  id        String    @id @default(cuid())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  users     User[]
  chatApps  ChatApp[] @relation("ChatAppToUserType")
}

model ChatApp {
  id             String     @id @default(cuid())
  name           String
  description    String
  url            String
  createdById    String
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  isVisibleToAll Boolean    @default(true)
  isAdminOnly    Boolean    @default(false)
  details        String?
  createdBy      User       @relation(fields: [createdById], references: [id])
  userTypes      UserType[] @relation("ChatAppToUserType")
}

model Feedback {
  id         String         @id @default(cuid())
  content    String
  department String?
  name       String?
  status     FeedbackStatus @default(NEW)
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
}

enum Role {
  USER
  ADMIN
  SUPERUSER
}

enum AppType {
  ADMIN
  USER
}

enum FeedbackStatus {
  NEW        // 新規
  IN_REVIEW  // 検討中
  ACCEPTED   // 採用
  REJECTED   // 不採用
  COMPLETED  // 対応済み
}
